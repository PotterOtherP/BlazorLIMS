@using Microsoft.EntityFrameworkCore;
@using BlazorLIMS.Data;
@using System;

<tr>
    <th>@sample.LabIdFull</th>
    <th>@sample.SampleCode</th>
    @if (@sample.SampleType.Equals("Waste"))
    {
        testMenu = Info.WasteTestMenu;
    }

    else if (@sample.SampleType.Equals("Solution"))
    {
        testMenu = Info.SolutionTestMenu;
    }

    else if (@sample.SampleType.Equals("Media'"))
    {
        testMenu = Info.MediaTestMenu;
    }

    @foreach (var name in testMenu)
    {
        @if (@sample.AssignedTestsString.Contains($"|{@name}|")
            || @sample.AssignedTestsString.StartsWith($"{@name}|")
            || @sample.AssignedTestsString.EndsWith($"|{@name}"))
        {
            @if (@name.Equals("ICP"))
            {
                if (@sample.ICPAssigned() && !@sample.ICPComplete())
                {
                    <th>O</th>
                }

                else if (@sample.ICPAssigned() && @sample.ICPComplete())
                {
                    <th>X</th>
                }

                else
                {
                    <th>-</th>
                }
            }

            else if (@name.Equals("HM"))
            {
                if (@sample.HMAssigned() && !@sample.HMComplete())
                {
                    <th>O</th>
                }

                else if (@sample.HMAssigned() && @sample.HMComplete())
                {
                    <th>X</th>
                }

                else
                {
                    <th>-</th>
                }
            }

            else
            {
                var testModel = @sample.AssignedTests.Find(t => (t.Name.Equals(@name)));
                <TestValueInput test=@testModel Callback="@Refresh"/>
                @* <th>@name</th> *@
            }

        }
        else
        {
            <th>-</th>
        }
    }
    
</tr>

@code {

    [Parameter]
    public SampleModel sample { get; set; }

    [Parameter]
    public EventCallback Callback { get; set; }

    private string[] testMenu = Info.PlantTestMenu;


    private async void Refresh() {
        
        await Callback.InvokeAsync();
        StateHasChanged();
    } 

}