@page "/Worklist"

@using Microsoft.EntityFrameworkCore;
@using BlazorLIMS.Data;
@using BlazorLIMS.Components;
@using System;

<select @bind="DisplayType" style="margin: 25px;">
    <option value="Plant">Plant</option>
    <option value="Waste">Waste</option>
    <option value="Solution">Solution</option>
    <option value="Media">Media</option>
</select>

<table class="table">
    <thead>
        <th>Report ID</th>
        <th></th>
        <WorklistTestRow SampleType=@DisplayType />
    </thead>

    @foreach (var report in savedReports)
    {
        @if (report.SampleType.Equals(DisplayType))
        {
            
            <tr>
                <th>@report.LabReportIdFull - @report.ReportType</th>
                @if (report.IsComplete())
                {
                    <th style="color: green;">Finalize</th>
                }
                else{
                    <th style="color: red;">Incomplete</th>
                }
            </tr>
            
            @foreach (var s in @report.Samples)
            {
                <WorklistRow sample=@s Callback="OnInitializedAsync"/>
            }

        }
    }

</table>

<button @onclick="DeleteAllReports" style="margin: 30px;">Delete All Reports</button>

@code {

    private List<ReportModel> savedReports;

    private string DisplayType = "Plant"; 

    private async void DeleteAllReports() {

        using (var context = new PWSMDbContext())
        {
            var reports = await context.ReportModels.ToListAsync();
            var samples = await context.SampleModels.ToListAsync();
            var tests = await context.SampleTestModels.ToListAsync();

            try {
                context.SampleTestModels.RemoveRange(tests);
                context.SampleModels.RemoveRange(samples);
                context.ReportModels.RemoveRange(reports);
            }

            catch (Exception ex) {
                Console.WriteLine(ex.Message);
            }

            await context.SaveChangesAsync();
        }

        savedReports.Clear();

    }

    protected override async Task OnInitializedAsync() {

        Info.CheckUser();

        using (var context = new PWSMDbContext())
        {
            savedReports = await context.ReportModels
            .Include("Samples.AssignedTests")
            .ToListAsync();

        }
    }
}