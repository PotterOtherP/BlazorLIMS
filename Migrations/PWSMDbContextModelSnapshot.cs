// <auto-generated />
using System;
using BlazorLIMS;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlazorLIMS.Migrations
{
    [DbContext(typeof(PWSMDbContext))]
    partial class PWSMDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("BlazorLIMS.Data.LabTestData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DefaultAssigned")
                        .HasColumnType("INTEGER");

                    b.Property<double>("HighValue")
                        .HasColumnType("REAL");

                    b.Property<double>("LowValue")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("SampleCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Units")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TestDataTable");
                });

            modelBuilder.Entity("BlazorLIMS.Data.ReportModel", b =>
                {
                    b.Property<int>("ReportModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LabReportId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReportType")
                        .HasColumnType("TEXT");

                    b.Property<string>("SampleType")
                        .HasColumnType("TEXT");

                    b.HasKey("ReportModelId");

                    b.ToTable("ReportModel");
                });

            modelBuilder.Entity("BlazorLIMS.Data.SampleModel", b =>
                {
                    b.Property<int>("SampleModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LabId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LabReportIdFull")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReportModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SampleCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("SampleType")
                        .HasColumnType("TEXT");

                    b.HasKey("SampleModelId");

                    b.HasIndex("ReportModelId");

                    b.ToTable("SampleModel");
                });

            modelBuilder.Entity("BlazorLIMS.Data.SampleTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("HighValue")
                        .HasColumnType("REAL");

                    b.Property<double>("LowValue")
                        .HasColumnType("REAL");

                    b.Property<double>("MeasuredValue")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SampleModelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SampleModelId");

                    b.ToTable("SampleTest");
                });

            modelBuilder.Entity("BlazorLIMS.Data.SampleModel", b =>
                {
                    b.HasOne("BlazorLIMS.Data.ReportModel", "Report")
                        .WithMany("Samples")
                        .HasForeignKey("ReportModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("BlazorLIMS.Data.SampleTest", b =>
                {
                    b.HasOne("BlazorLIMS.Data.SampleModel", null)
                        .WithMany("AssignedTests")
                        .HasForeignKey("SampleModelId");
                });

            modelBuilder.Entity("BlazorLIMS.Data.ReportModel", b =>
                {
                    b.Navigation("Samples");
                });

            modelBuilder.Entity("BlazorLIMS.Data.SampleModel", b =>
                {
                    b.Navigation("AssignedTests");
                });
#pragma warning restore 612, 618
        }
    }
}
