// <auto-generated />
using System;
using BlazorLIMS;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlazorLIMS.Migrations
{
    [DbContext(typeof(PWSMDbContext))]
    partial class PWSMDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlazorLIMS.Data.ReportModel", b =>
                {
                    b.Property<int>("ReportModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgronomistComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("datetime2");

                    b.Property<int>("LabReportId")
                        .HasColumnType("int");

                    b.Property<string>("LabReportIdFull")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SampleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ReportModelId");

                    b.ToTable("ReportModels");
                });

            modelBuilder.Entity("BlazorLIMS.Data.SampleCodeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultTestString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SampleCodeTable");
                });

            modelBuilder.Entity("BlazorLIMS.Data.SampleModel", b =>
                {
                    b.Property<int>("SampleModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssignedTestsString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LabId")
                        .HasColumnType("int");

                    b.Property<string>("LabIdFull")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabReportIdFull")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReportModelId")
                        .HasColumnType("int");

                    b.Property<string>("SampleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SampleType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SampleModelId");

                    b.HasIndex("ReportModelId");

                    b.ToTable("SampleModels");
                });

            modelBuilder.Entity("BlazorLIMS.Data.SampleTestModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("HighValue")
                        .HasColumnType("float");

                    b.Property<double>("LowValue")
                        .HasColumnType("float");

                    b.Property<double?>("MeasuredValue")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SampleModelId")
                        .HasColumnType("int");

                    b.Property<string>("Units")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SampleModelId");

                    b.ToTable("SampleTestModels");
                });

            modelBuilder.Entity("BlazorLIMS.Data.TestDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("HighValue")
                        .HasColumnType("float");

                    b.Property<double>("LowValue")
                        .HasColumnType("float");

                    b.Property<string>("SampleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Units")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TestDataTable");
                });

            modelBuilder.Entity("BlazorLIMS.Data.UserModel", b =>
                {
                    b.Property<int>("UserModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserModelId");

                    b.ToTable("UserModels");
                });

            modelBuilder.Entity("BlazorLIMS.Data.SampleModel", b =>
                {
                    b.HasOne("BlazorLIMS.Data.ReportModel", "Report")
                        .WithMany("Samples")
                        .HasForeignKey("ReportModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("BlazorLIMS.Data.SampleTestModel", b =>
                {
                    b.HasOne("BlazorLIMS.Data.SampleModel", null)
                        .WithMany("AssignedTests")
                        .HasForeignKey("SampleModelId");
                });

            modelBuilder.Entity("BlazorLIMS.Data.ReportModel", b =>
                {
                    b.Navigation("Samples");
                });

            modelBuilder.Entity("BlazorLIMS.Data.SampleModel", b =>
                {
                    b.Navigation("AssignedTests");
                });
#pragma warning restore 612, 618
        }
    }
}
